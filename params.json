{
  "name": "Core Hunter 3",
  "tagline": "Flexible core subset selection",
  "body": "Looking for the old Core Hunter 2 website? It's [here](v2/).\r\n\r\n## What is Core Hunter?\r\nCore Hunter is a flexible tool for multi-purpose core subset selection. Version 3 has been recoded from scratch using the [JAMES framework](http://www.jamesframework.org) which provides the applied optimization algorithms. A lot of new features have been added such as the ability to sample cores based on multiple types of genetic marker data, phenotypic traits or a precomputed distance matrix. New and improved evaluation measures were also included, that can be separately or simultaneously optimized.\r\n\r\n## Getting started with Core Hunter\r\nCore Hunter is implemented in Java and can be executed from R or using the graphical interface. In both cases you will need to have installed a [Java Runtime Environment (JRE)](http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html) version 8 or later.\r\n\r\n### R Package\r\nThe package `corehunter` is available on CRAN and can be installed with\r\n```R\r\n> install.packages(\"corehunter\")\r\n```\r\n\r\nAfterwards, load the package\r\n\r\n```R\r\n> library(corehunter)\r\n```\r\n\r\nand add your data, e.g.\r\n\r\n```R\r\n> my.genotypes <- genotypes(file = \"path/to/file\")\r\n```\r\n\r\nSampling a core collection is then as easy as\r\n\r\n```R\r\n> sampleCore(my.genotypes)\r\n```\r\n\r\nThere are numerous options when sampling a core. For example, you can change the size of the core (defaults to 20%), optimize a specific measure (defaults to average entry-to-nearest-entry distance), maximize a weighted index including multiple measures, change stop conditions (by default, the algorithm stops when it was unable to further improve the core during the last 10 seconds), etc. All functions have detailed documentation, for example try\r\n\r\n```R\r\n> ?sampleCore\r\n> ?objective\r\n> ?genotypes\r\n> ?phenotypes\r\n> ?distances\r\n> ?coreHunterData\r\n```\r\n\r\nMany examples are included in the R package as well.\r\n\r\n### Graphical interface\r\nA simple graphical interface is under development. More information will be posted here soon.\r\n\r\n## Supported data types\r\nCore Hunter 3 supports multiple types of genetic marker data, phenotypic traits and precomputed distance matrices. Data can be loaded from files and, when using the R package, from data frames and matrices.\r\n\r\n### Genetic marker data\r\n\r\nGenotypes can be provided in various formats.\r\n\r\n#### Default format\r\n\r\nThe default format contains one row per accession and one or more columns per marker. It is suited for data with a fixed number of allele observations per specific marker in each individual. The values are allele names or numbers, or in fact any token used to identify the detected alleles. Common cases are those with one or two columns per marker, e.g. suited for homozygous/haploid and diploid data, respectively. The number of observed alleles may vary across markers.\r\n\r\nThere is one compulsory header column `ID` specifying unique accession identifiers. Optionally, a second header column `NAME` can be included to provide names as well, which need not be unique nor defined for all accessions. The single header row contains marker names which are repeated for each column corresponding to the same marker. Optionally, column names may include a suffix added to the marker name, starting with a `.`, `-` or `_` character. For example, in the case of diploid data, it is allowed that the two columns corresponding to the same marker have names like `M5.1` & `M5.2`, `M17-a` & `M17-b` or  `X_1` & `X_2`, for markers named `M5`, `M17` and `X`, respectively. The column name prefix up to before the last occurrence of any `.`, `-` or `_` character is taken to be the marker name.\r\n\r\nThis format can not be used for bulk samples. For such data the frequency format should be used instead.\r\n\r\n#### Frequency data\r\n\r\nThis is the original format from Core Hunter 1 and 2, but it has been transposed to follow the convention that rows are observations (accessions) and columns are variables (marker alleles). This format contains one row per accession and one column per combination of marker and allele. The values are allele frequencies. At least one column (allele) is provided per marker and the number of alleles per marker may vary.\r\n\r\nThere is one compulsory header column `ID` specifying unique accession identifiers. Optionally, a second header column `NAME` can be included to provide names as well, which need not be unique nor defined for all accessions. The first, compulsory header row contains marker names, which are repeated for each consecutive column corresponding to the same marker. An optional second header row `ALLELE` can be included to provide allele names per marker.\r\n\r\nThis format is suitable for entries of individual or bulk samples.\r\n\r\n#### Biparental data\r\n\r\nThis format describes genetic marker data with two alleles per marker. It contains one row per accession and one column per marker with values `0`, `1` and `2` denoting the number of detected occurrences of an arbitrary reference allele. Thus, the values `0` and `2` indicate homozygotes of the two alleles, respectively, while `1` is used for a heterozygote.\r\n\r\nThere is one compulsory header column `ID` specifying unique accession identifiers. Optionally, a second header column `NAME` can be included to provide names as well, which need not be unique nor defined for all accessions. The single header row may optionally provide marker names.\r\n\r\nThis format is only suited for data where each marker has (at most) two possible alleles and can not be used to describe bulked data.\r\n\r\n## Evaluation measures\r\nOne of the main strengths of Core Hunter is that it can directly optimize a number of different evaluation measures.\r\nIf desired, multiple measures can be simultaneously optimized as part of a weighted index.\r\nThe measures included in Core Hunter 3 are listed below.\r\n\r\n### Distance based measures\r\n\r\n- Average entry-to-nearest-entry distance (diversity)\r\n- Average accession-to-nearest-entry distance (representativeness)\r\n- Average entry-to-entry distance (provided for historical reasons, not preferred)\r\n\r\nGower's distance is used to compute distances from phenotypic traits, and both the Modified Roger's as well as Cavalli-Sforza & Edwards distances are supported for genetic marker data. Alternatively, a precomputed distance matrix can be used.\r\n\r\n### Allelic richness\r\n\r\n- Shannon's index\r\n- Expected heterozygosity\r\n- Allele coverage\r\n\r\nAvailable for genetic marker data only.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}